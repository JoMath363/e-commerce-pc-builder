generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
}

model User {
  email        String   @id @unique
  name         String
  passwordHash String
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  orders       Order[]
  builds       Build[]
}

model Category {
  id    String   @id @default(uuid())
  name  String
  products Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Decimal  @db.Decimal(10, 2)
  stock       Int
  imageUrl    String
  specs       Json
  createdAt   DateTime @default(now())
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]

  buildsCpu     Build[]   @relation("CPU")
  buildsMotherboard Build[] @relation("Motherboard")
  buildsRam     Build[]   @relation("RAM")
  buildsRam2    Build[]   @relation("RAM2")
  buildsGpu     Build[]   @relation("GPU")
  buildsGpu2    Build[]   @relation("GPU2")
  buildsStorage Build[]   @relation("Storage")
  buildsStorage2 Build[]  @relation("Storage2")
  buildsPsu     Build[]   @relation("PSU")
  buildsCase    Build[]   @relation("Case")
  buildsCooler  Build[]   @relation("Cooler")
  buildsCaseFan Build[]   @relation("CaseFan")
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [email])
  status    OrderStatus
  total     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  items     OrderItem[]
}

model OrderItem {
  id         String   @id @default(uuid())
  orderId    String
  productId  String
  quantity   Int
  unitPrice  Decimal  @db.Decimal(10, 2)

  order      Order    @relation(fields: [orderId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}

model Build {
  id             String   @id @default(uuid())
  userId         String
  name           String
  cpuId          String
  motherboardId  String
  ramId          String
  ram2Id         String?
  gpuId          String
  gpu2Id         String?
  storageId      String
  storage2Id     String? 
  psuId          String
  caseId         String
  coolerId       String? 
  caseFanId      String? 
  totalPrice     Decimal
  createdAt      DateTime @default(now())

  user           User     @relation(fields: [userId], references: [email])
  cpu            Product  @relation("CPU", fields: [cpuId], references: [id])
  motherboard    Product  @relation("Motherboard", fields: [motherboardId], references: [id])
  ram            Product  @relation("RAM", fields: [ramId], references: [id])
  ram2           Product? @relation("RAM2", fields: [ram2Id], references: [id])
  gpu            Product  @relation("GPU", fields: [gpuId], references: [id])
  gpu2           Product? @relation("GPU2", fields: [gpu2Id], references: [id])
  storage        Product  @relation("Storage", fields: [storageId], references: [id])
  storage2       Product? @relation("Storage2", fields: [storage2Id], references: [id])
  psu            Product  @relation("PSU", fields: [psuId], references: [id])
  case           Product  @relation("Case", fields: [caseId], references: [id])
  cooler         Product? @relation("Cooler", fields: [coolerId], references: [id])
  caseFan        Product? @relation("CaseFan", fields: [caseFanId], references: [id])
}

